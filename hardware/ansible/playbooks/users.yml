---
- name: User Management
  hosts: all
  become: true

  tasks:
    - name: Ensure groups exist
      group:
        name: "{{ item }}"
        state: present
      loop: "{{ users | map(attribute='groups') | flatten | unique | list }}"
      when: users | length > 0

    - name: Ensure sudo group exists
      group:
        name: sudo
        state: present

    - name: Create users
      user:
        name: "{{ item.username }}"
        shell: /bin/bash
        groups: "{{ item.groups | default([]) }}"
        append: yes
        create_home: yes
        state: present
      loop: "{{ users }}"
      loop_control:
        label: "{{ item.username }}"
      register: user_creation

    - name: Add users to sudo group if required
      user:
        name: "{{ item.username }}"
        groups: sudo
        append: yes
      loop: "{{ users | selectattr('is_sudo', 'defined') | selectattr('is_sudo') | list }}"
      loop_control:
        label: "{{ item.username }}"

    - name: Create .ssh directories
      file:
        path: "/home/{{ item.username }}/.ssh"
        state: directory
        owner: "{{ item.username }}"
        group: "{{ item.username }}"
        mode: '0700'
      loop: "{{ users }}"
      loop_control:
        label: "{{ item.username }}"

    - name: Create sudoers file for passwordless sudo
      copy:
        dest: "/etc/sudoers.d/{{ item.username }}"
        content: "{{ item.username }} ALL=(ALL) NOPASSWD: ALL"
        owner: root
        group: root
        mode: '0440'
        validate: 'visudo -cf %s'
      loop: "{{ users | selectattr('is_sudo', 'defined') | selectattr('is_sudo') | list }}"
      loop_control:
        label: "{{ item.username }}"

    - name: Summary of user management
      debug:
        msg:
          - "Created users: {{ user_creation.results | selectattr('changed', 'defined') | selectattr('changed') | map(attribute='item.username') | list }}"
          - "Total users managed: {{ users | length }}"
          - "Users with sudo access: {{ users | selectattr('is_sudo', 'defined') | selectattr('is_sudo') | map(attribute='username') | list }}"
