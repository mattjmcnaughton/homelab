---
services:
  litellm-postgres:
    image: ${CONTAINER_REGISTRY:-docker.io}/postgres:16-alpine
    restart: unless-stopped
    volumes:
      - /mnt/data/litellm-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    network_mode: service:tailscale
    user: "1000:1000"
    cap_drop:
      - ALL

  litellm:
    image: ${CONTAINER_REGISTRY:-ghcr.io}/berriai/litellm-non_root:main-v1.67.0-stable
    restart: unless-stopped
    depends_on:
      litellm-postgres:
        condition: service_healthy
    volumes:
      - ./litellm.config.yaml:/app/config.yaml:ro
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION_NAME=${AWS_REGION_NAME}

      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - PERPLEXITYAI_API_KEY=${PERPLEXITYAI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}

      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}

      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}
    command: ["--config", "/app/config.yaml", "--num_workers", "8", "--detailed_debug"]
    healthcheck:
      # Switch to an actual network request once we have curl/wget installed.
      test: ["CMD", "ls"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    user: "1000:1000"
    cap_drop:
      - ALL
    deploy:
      resources:
        limits:
          memory: 3G
        reservations:
          memory: 1G
    network_mode: service:tailscale

  tailscale:
    image: tailscale/tailscale:latest
    restart: unless-stopped
    hostname: litellm
    volumes:
      - tailscale-tmp:/tmp
    environment:
      - TS_HOSTNAME={{ service_name }}
      - TS_USERSPACE=true
      - TS_EXTRA_ARGS=--advertise-tags={{ tailscale_advertise_tags_arg }}
      - TS_SOCKET=/tmp/tailscaled.sock
    cap_add:
      - NET_ADMIN
    env_file:
      - .env.tailscale
    networks:
      - internal

  caddy:
    image: caddy:2-alpine
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - /mnt/data/litellm-caddy-data:/data
      - caddy-config-tmp:/config
      - tailscale-tmp:/var/run/tailscale
    depends_on:
      - litellm
    network_mode: service:tailscale

networks:
  internal:
    driver: bridge

volumes:
  caddy-config-tmp:
  tailscale-tmp:
